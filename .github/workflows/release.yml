name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'

    - name: Run tests
      run: make test

  build:
    name: Build and Release
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            suffix: linux-amd64
          - goos: linux
            goarch: arm64
            suffix: linux-arm64
          - goos: darwin
            goarch: amd64
            suffix: darwin-amd64
          - goos: darwin
            goarch: arm64
            suffix: darwin-arm64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'

    - name: Get version
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Build binaries
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        mkdir -p dist
        go build -ldflags "-X main.Version=${{ steps.version.outputs.VERSION }}" \
          -o dist/coordinator-${{ matrix.suffix }} ./cmd/coordinator
        go build -ldflags "-X main.Version=${{ steps.version.outputs.VERSION }}" \
          -o dist/node-${{ matrix.suffix }} ./cmd/node

        # Create archive
        cd dist
        tar -czf torua-${{ steps.version.outputs.VERSION }}-${{ matrix.suffix }}.tar.gz \
          coordinator-${{ matrix.suffix }} node-${{ matrix.suffix }}
        cd ..

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: torua-${{ matrix.suffix }}
        path: dist/*.tar.gz

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v3
      with:
        path: dist/

    - name: Get version
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Generate changelog
      id: changelog
      run: |
        # Extract changelog for this version
        echo "## What's Changed" > changelog.md
        git log --pretty=format:"* %s (%h)" $(git describe --tags --abbrev=0 HEAD^)..HEAD >> changelog.md
        echo "" >> changelog.md
        echo "## Contributors" >> changelog.md
        git log --pretty=format:"* @%an" $(git describe --tags --abbrev=0 HEAD^)..HEAD | sort -u >> changelog.md

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        name: Release ${{ steps.version.outputs.VERSION }}
        body_path: changelog.md
        draft: false
        prerelease: ${{ contains(steps.version.outputs.VERSION, '-') }}
        files: |
          dist/**/*.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker:
    name: Build and Push Docker Images
    needs: test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Get metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          johnjansen/torua
          ghcr.io/${{ github.repository }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}

    - name: Build and push coordinator
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.coordinator
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          johnjansen/torua-coordinator:${{ steps.meta.outputs.version }}
          johnjansen/torua-coordinator:latest
          ghcr.io/${{ github.repository }}-coordinator:${{ steps.meta.outputs.version }}
          ghcr.io/${{ github.repository }}-coordinator:latest

    - name: Build and push node
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.node
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          johnjansen/torua-node:${{ steps.meta.outputs.version }}
          johnjansen/torua-node:latest
          ghcr.io/${{ github.repository }}-node:${{ steps.meta.outputs.version }}
          ghcr.io/${{ github.repository }}-node:latest
